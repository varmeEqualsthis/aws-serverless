service: ${self:custom.prefix}-cwl-processing

plugins:
 - serverless-pseudo-parameters

provider:
  name: aws
  runtime: nodejs6.10
  stage: ${opt:stage, self:custom.defaultStage}
  role: ${file(../../resources/provider.js):project.lambdaRole}  
  
  environment:
    SERVICE_PREFIX: ${self:custom.pre}
    FUNCTION_NAME_MATCH_PREFIX: ${self:custom.prefix}

  stackTags: ${file(../../resources/standard-tags.yml)}

custom:
  defaultStage: dev
  pre: ${self:service}-${self:provider.stage}
  prefix: ${file(../../resources/provider.js):project.prefix}

functions:
  ship-logs:
    handler: functions/ship-logs/handler.handler
    description: Sends CloudWatch logs to LogStash
    environment:
      elasticsearch_host: search-es01-6tevasoownhyh4sabhhzx7gq6u.us-east-1.es.amazonaws.com

  set-retention:
    handler: functions/set-retention/handler.handler
    description: Sets the log retention policy to 30 days
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.logs
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - logs.amazonaws.com
              eventName:
                - CreateLogGroup

  subscribe:
    handler: functions/subscribe/handler.handler
    description: Subscribe logs to the ship-log function
    environment:
      DEST_FUNC: "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:${self:custom.pre}-ship-logs"
    events:
      - cloudwatchEvent:
          event:
            source:
              - aws.logs
            detail-type:
              - AWS API Call via CloudTrail
            detail:
              eventSource:
                - logs.amazonaws.com
              eventName:
                - CreateLogGroup

resources:
  Resources:
    LambdaInvokePermission:
      Type: AWS::Lambda::Permission
      Properties:
        Action: lambda:InvokeFunction
        FunctionName:
          Fn::Join:
            - ""
            - - "Ref" : "ShipDashlogsLambdaFunction"
        Principal: logs.#{AWS::Region}.amazonaws.com